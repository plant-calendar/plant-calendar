{"version":3,"sources":["webpack:///./client/components/CreateHabitatModal/index.tsx","webpack:///./client/components/Logout/index.tsx","webpack:///./client/components/User/AcceptSubscriptionsModal/index.tsx","webpack:///./client/components/User/SubscribeModal/Confirm/index.tsx","webpack:///./client/components/User/SubscribeModal/Select/index.tsx","webpack:///./client/components/User/SubscribeModal/Select/search-bar.tsx","webpack:///./client/components/User/SubscribeModal/index.tsx","webpack:///./client/components/User/get-habitat-tile-data.tsx","webpack:///./client/components/User/index.tsx","webpack:///./client/components/common/Notification.tsx","webpack:///./client/config.ts","webpack:///./common/db-interfaces/types.ts"],"names":[],"mappings":"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","file":"./public/3.bundle.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {actions as habitatActions} from '../../store/habitat';\nimport CreateModal from \"../common/CreateModal\";\nimport {validatorGetters} from \"../../forms/validation\";\nimport {FieldTypes} from \"../../forms/interfaces\";\nimport {IHabitat} from \"../../../common/db-interfaces/habitat.interface\";\n\ninterface IProps {\n    create: (p1: any, p2: any) => any;\n    afterCreate: (createdHabitat?: object) => any;\n    onCancel: () => any;\n}\n\nconst getStages = (existingHabitat?: IHabitat) => {\n    const {\n        name = '',\n        imageUrl = '/habitat-avatars/habitat1.png',\n    } = (existingHabitat || {});\n    return [\n        {\n            fields: [\n                {\n                    key: 'name',\n                    label: 'what do you want to call this habitat?',\n                    lowerCase: true,\n                    validators: [\n                        validatorGetters.isNotNil(),\n                        validatorGetters.isAtLeastLength(3),\n                        validatorGetters.isOfGenericAllowedCharacters(),\n                    ],\n                    initial: name,\n                    type: FieldTypes.INPUT,\n                },\n                {\n                    key: 'imageUrl',\n                    label: 'pick an avatar for this habitat .',\n                    validators: [],\n                    type: FieldTypes.AVATAR,\n                    imageUrls: [\n                        '/habitat-avatars/habitat1.png',\n                        '/habitat-avatars/habitat2.png',\n                        '/habitat-avatars/habitat3.png',\n                        '/habitat-avatars/habitat4.png',\n                        '/habitat-avatars/habitat5.png',\n                        '/habitat-avatars/habitat6.png',\n                        '/habitat-avatars/habitat7.png',\n                        '/habitat-avatars/habitat8.png',\n                    ],\n                    initial: imageUrl,\n                },\n            ],\n        },\n    ];\n};\n\nconst Component = (props: IProps) => {\n    return (\n      <CreateModal\n          stages={getStages()}\n          save={props.create}\n          afterSave={props.afterCreate}\n          close={props.onCancel}\n          submitButtonText=\"create!\"\n      />\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    create: (habitat, callback) => dispatch(habitatActions.createOne(habitat, callback)),\n});\n\nconst CreateHabitat = connect(null, mapDispatchToProps)(Component);\nexport { CreateHabitat };","import React from 'react';\nimport styled from 'styled-components';\nimport {COLORS} from \"../style-config\";\nimport {apiBaseUrl} from '../../config';\n\nconst StyledLogout = styled.a`\n    background: ${COLORS.lightGray};\n    border-radius: 5px;\n    padding: 1px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    width: 75px;\n\n    &:hover {\n        background: ${COLORS.darkGray};\n    }\n    &:active {\n        background: ${COLORS.darkGray};\n    }\n    text-decoration: none;\n    color: ${COLORS.white};\n`;\n\nexport default () => (\n    <StyledLogout href={`${apiBaseUrl}/auth/logout`}>logout</StyledLogout>\n);","import React from 'react';\nimport ReactModal from 'react-modal';\nimport styled from 'styled-components';\nimport {BASE_MODAL_STYLE, COLORS} from \"../../style-config\";\nimport {Close} from \"../../common/CloseSign\";\nimport {entityId} from \"../../../../common/db-interfaces/types\";\nimport {SubmitButton} from \"../../common/SubmitButton\";\nimport { TILE_HEIGHT } from \"../../style-config\";\n\nconst StyledContainer = styled.div`\n    margin-top: 40px;\n`;\n\nconst StyledRequest = styled.div`\n    height: ${TILE_HEIGHT + 20}px;\n    box-shadow: 2px 2px #e8e8e8;\n    width: 100%;\n    margin-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`;\n\nconst StyledRequestText = styled.div`\n    color: ${COLORS.darkGreen};\n    padding-top: 15px;\n`;\n\nconst StyledButtonsContainer = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    margin-right: 30px;\n    margin-bottom: 16px;\n`;\n\nconst StyledEmphasizedText = styled.span`\n   color: ${COLORS.notification};\n`;\n\nconst StyledNoMoreRequests = styled.div`\n    text-align: center;\n    color: ${COLORS.lightGray};\n`;\n\nexport interface ISubscriptionRequest {\n    id: entityId;\n    userId: entityId;\n    userName: string;\n    habitatId: entityId;\n    habitatName: string;\n}\n\ninterface IProps {\n    close: () => any;\n    requests: ISubscriptionRequest[];\n    accept: (request: ISubscriptionRequest) => any;\n    reject: (request: ISubscriptionRequest) => any;\n}\n\nexport default (props: IProps) => {\n    const contents = !props.requests.length\n        ? <StyledNoMoreRequests>you responded to all requests</StyledNoMoreRequests>\n        : props.requests.map(request => {\n            const buttonWidth = '60px';\n            return (\n                <StyledRequest>\n                    <StyledRequestText>\n                        User{' '}\n                        <StyledEmphasizedText>{request.userName}</StyledEmphasizedText>\n                        {' '}wants to subscribe to your habitat {request.habitatName}\n                    </StyledRequestText>\n                    <StyledButtonsContainer>\n                        <SubmitButton\n                            onClick={() => props.accept(request)}\n                            text={'accept'}\n                            styles={{ width: buttonWidth }}\n                        />\n                        <SubmitButton\n                            onClick={() => props.reject(request)}\n                            text={'decline'}\n                            styles={{\n                                width: buttonWidth,\n                                marginLeft: '10px',\n                                background: COLORS.notification,\n                            }}\n                        />\n                    </StyledButtonsContainer>\n                </StyledRequest>\n            );\n        });\n\n  return (\n      <ReactModal isOpen style={{ content: BASE_MODAL_STYLE.CONTENT }}>\n        <Close onClick={props.close} />\n        <StyledContainer>{contents}</StyledContainer>\n      </ReactModal>\n  );\n};","import React from 'react';\nimport styled from 'styled-components';\nimport {IHabitat} from \"../../../../../common/db-interfaces/habitat.interface\";\nimport {SubmitButton} from \"../../../common/SubmitButton\";\nimport {COLORS} from \"../../../style-config\";\nimport Avatar from \"../../../TileDisplay/avatar\";\nimport {entityId} from \"../../../../../common/db-interfaces/types\";\n\nconst StyledContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: 40%;\n`;\n\nconst StyledMessage = styled.div`\n    color: ${COLORS.darkGreen};\n    text-align: center;\n    margin-bottom: 20px;\n`;\n\nconst StyledButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\nconst StyledAvatarContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 15px;\n`;\n\ninterface IProps {\n    habitat: IHabitat;\n    onConfirm: (habitatId: entityId) => any;\n}\n\nexport default (props: IProps) => {\n    return (\n        <StyledContainer>\n            <StyledAvatarContainer>\n                <Avatar imageUrl={props.habitat.imageUrl} borderColor={COLORS.primaryGreen} />\n            </StyledAvatarContainer>\n            <StyledMessage>Request to subscribe to {props.habitat.name}?</StyledMessage>\n            <StyledButtonContainer>\n                <SubmitButton\n                    onClick={() => props.onConfirm(props.habitat.id)}\n                    text=\"request!\"\n                    styles={{ width: \"50%\", maxWidth: \"200px\", minWidth: \"80px\" }}\n                />\n            </StyledButtonContainer>\n        </StyledContainer>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport {IHabitat} from \"../../../../../common/db-interfaces/habitat.interface\";\nimport Tile from \"../../../TileDisplay/tile\";\nimport SearchBar from './search-bar';\nimport {COLORS} from \"../../../style-config\";\n\nconst StyledTileContainer = styled.div`\n`;\n\nconst StyledNoHabitatsMessage = styled.div`\n    text-align: center;\n    color: ${COLORS.lightGray};\n`;\n\ninterface IProps {\n    searchHabitats: (searchString: string) => any;\n    habitats: IHabitat[];\n    onClickHabitat: (habitat: IHabitat) => any;\n}\n\nexport default (props: IProps) => {\n    const { habitats, searchHabitats, onClickHabitat } = props;\n    return (\n        <div>\n            <SearchBar onSearch={(searchString: string) => searchHabitats(searchString)} />\n            {\n                habitats.length === 0\n                    ? (\n                        <StyledNoHabitatsMessage>no matching habitats found</StyledNoHabitatsMessage>\n                    )\n                    : null\n            }\n            <StyledTileContainer>\n                {habitats.map(habitat => (\n                    <Tile\n                        title={habitat.name}\n                        details={''}\n                        elementKey={habitat.id}\n                        imageUrl={habitat.imageUrl}\n                        containerStyle={{ width: '100%' }}\n                        onClick={() => onClickHabitat(habitat)}\n                    />\n                ))}\n            </StyledTileContainer>\n        </div>\n    );\n};\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {COLORS} from \"../../../style-config\";\n\nconst StyledBar = styled.div`\n    margin-top: 30px;\n    margin-bottom: 30px;\n    display: flex;\n    justify-content: center;\n    color: ${COLORS.darkGreen};\n`;\n\nconst VerticalFlexer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 50%;\n`;\n\nconst StyledTextArea = styled.textarea`\n    resize: none;\n    width: 100%;\n    height: 30px;\n    color: ${COLORS.darkGreen};\n    border: 1px solid ${COLORS.darkGreen};\n    text-decoration: none;\n`;\n\nconst StyledLabel = styled.div`\n    margin-top: 5px;\n    width: 100%;\n    text-align: center;\n`;\n\nconst Component = ({ debouncedSearch }) => {\n    const [searchString, setSearchString] = useState('');\n\n    return (\n        <StyledBar>\n            <VerticalFlexer>\n                <StyledTextArea\n                    value={searchString}\n                    onChange={event => {\n                        const searched = event.target.value.toLowerCase();\n                        setSearchString(searched);\n                        if (searched.length > 2) {\n                            debouncedSearch(searched);\n                        }\n                    }}\n                    spellCheck={false}\n                />\n                <StyledLabel>\n                    search for habitats\n                </StyledLabel>\n            </VerticalFlexer>\n        </StyledBar>\n    );\n};\n\ninterface IProps {\n    onSearch: (searchString: string) => any;\n}\n\nconst debounce = (func, delay) => {\n    let timerId;\n    return (searchStr) => {\n        clearTimeout(timerId);\n        timerId = setTimeout(() =>  func(searchStr), delay);\n    };\n};\n\n// we must have a wrapper component to define our debounced function b/c, if we were\n// to put the definition in the child component, it would be redefined each time state\n// changed, at which point the timerId in the debouncer would be lost.\nexport default (props: IProps) => {\n    const debouncedSearch = debounce(str => {\n        props.onSearch(str);\n        // console.log(str)\n    }, 500);\n    return <Component debouncedSearch={debouncedSearch} />;\n};","import React, {useState} from 'react';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport {BASE_MODAL_STYLE} from \"../../style-config\";\nimport Confirm from './Confirm';\nimport Select from './Select';\nimport {Close} from \"../../common/CloseSign\";\nimport {IHabitat} from \"../../../../common/db-interfaces/habitat.interface\";\nimport { actions as habitatActions, selectors as habitatSelectors } from '../../../store/habitat';\nimport {entityId} from \"../../../../common/db-interfaces/types\";\n\ninterface IProps {\n    close: () => any;\n    searchHabitats: (searchString: string) => any;\n    habitats: IHabitat[];\n    requestSubscription: (habitatId: entityId, callback: () => any) => any;\n}\n\nconst Component = (props: IProps) => {\n    const [habitatToConfirm, setToConfirm] = useState(null as unknown as IHabitat);\n    const onConfirmSubscriptionRequest = (habitatId: entityId) => {\n      props.requestSubscription(habitatId, () => props.close());\n    };\n\n    return (\n        <ReactModal isOpen style={{ content: BASE_MODAL_STYLE.CONTENT }}>\n            <Close onClick={props.close} />\n            {habitatToConfirm\n                ? <Confirm habitat={habitatToConfirm} onConfirm={onConfirmSubscriptionRequest} />\n                : <Select\n                    searchHabitats={props.searchHabitats}\n                    habitats={props.habitats}\n                    onClickHabitat={(selected: IHabitat) => setToConfirm(selected)}\n                />\n            }\n        </ReactModal>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    searchHabitats: searchString => dispatch(habitatActions.habitatSearch(searchString)),\n    requestSubscription: (habitatId, callback) => dispatch(habitatActions.requestSubscription(habitatId, callback)),\n});\n\nconst mapStateToProps = state => ({\n    habitats: habitatSelectors.queriedHabitats(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","import {entityId, SUBSCRIPTION_STATUSES} from \"../../../common/db-interfaces/types\";\nimport {IPlant} from \"../../../common/db-interfaces/plant.interface\";\nimport {ITileProps} from \"../TileDisplay/tile\";\nimport {ITagProps} from \"../TileDisplay/tag\";\nimport {COLORS} from \"../style-config\";\n\ninterface IProps {\n    id: entityId; // habitat id\n    name: string;\n    imageUrl: string;\n    plants: IPlant[];\n    subscription: { status: SUBSCRIPTION_STATUSES };\n}\n\nconst getTags = (props: IProps, isSubscribed: boolean): ITagProps[] => {\n    return isSubscribed ? [] : [\n        {\n            text: `subscription ${(props.subscription || {}).status}`,\n            elementKey: `tag-${props.id}-status`,\n            backgroundColor: COLORS.darkGray,\n            color: COLORS.white,\n        },\n    ];\n};\n\nexport default (props: IProps): ITileProps => {\n    // we expect the subscription property to always exist in the data that we actually care about.  However,\n    // there is problem where the single Habitat page is using the same habitats property in the redux state\n    // as UserHabitats page, which is the page that calls this method. That single Habitat page fills the habitats\n    // property with a single habitat that does NOT have the subscription property and, before the UserHabitats\n    // page is able to overwrite the habitats property to an array of habitats where each does have a subscription\n    // property, the page is rendered and this method is called.\n    // @ts-ignore\n    const isSubscribed = (props.subscription || {}).status === SUBSCRIPTION_STATUSES.ACTIVE;\n    return {\n        elementKey: props.id,\n        title: props.name,\n        details: isSubscribed ? `${props.plants.length} plants` : undefined,\n        imageUrl: props.imageUrl,\n        linkTo: isSubscribed ? `/habitats/${props.id}` : undefined,\n        tags: getTags(props, isSubscribed),\n    };\n};","import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { TitleAndBackContainer, Title, Container } from \"../Habitat/styled-components\";\nimport { selectors as userSelectors, actions as userActions } from '../../store/user';\nimport { selectors as habitatSelectors, actions as habitatActions } from '../../store/habitat';\nimport AddTile from \"../common/AddTile\";\nimport { CreateHabitat } from \"../CreateHabitatModal\";\nimport TileContainer from '../TileDisplay';\nimport SubscribeModal from './SubscribeModal';\nimport Notification from '../common/Notification';\nimport AcceptSubscriptionsModal, {ISubscriptionRequest} from './AcceptSubscriptionsModal';\nimport getHabitatTileData from './get-habitat-tile-data';\nimport {entityId} from \"../../../common/db-interfaces/types\";\nimport Logout from '../Logout';\n\nconst StyledNotificationAndLogoutContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 125px;\n`;\n\nconst UserHabitatsComponent = props => {\n    const {\n        user,\n        habitats = [],\n        match,\n        fetchUser,\n        fetchUserSubscribedHabitats,\n        subscriptionRequests,\n        fetchSubscriptionRequests,\n        acceptSubscriptionRequest,\n        rejectSubscriptionRequest,\n        setSubscriptionRequests,\n    } = props;\n    const userId = +match.params.id;\n    if (!user) {\n        fetchUser(userId);\n        return null;\n    }\n    const [addHabitatOpen, setAddHabitatOpen] = useState(false);\n    const [subscribeToNewHabitatOpen, setSubscribeToNewHabitatOpen] = useState(false);\n    const [subscriptionRequestModalOpen, setSubscriptionRequestModalOpen] = useState(false);\n\n    useEffect(() => {\n        fetchUserSubscribedHabitats(userId);\n    }, []);\n    useEffect(() => {\n        fetchSubscriptionRequests();\n    }, []);\n\n    const getSubscriptionRequestDecisionCallback = (requestId: entityId) => () => {\n        setSubscriptionRequests(subscriptionRequests.filter(request => request.id !== requestId));\n    };\n    return (\n        <div>\n            {addHabitatOpen\n                ? <CreateHabitat\n                    afterCreate={createdHabitat => {\n                        setAddHabitatOpen(false);\n                        props.history.push(`/habitats/${createdHabitat.id}`);\n                    }}\n                    onCancel={() => setAddHabitatOpen(false)}\n                />\n                : null\n            }\n            {subscribeToNewHabitatOpen\n                ? <SubscribeModal close={() => setSubscribeToNewHabitatOpen(false)} />\n                : null\n            }\n            {subscriptionRequestModalOpen\n                ? (\n                    <AcceptSubscriptionsModal\n                        close={() => setSubscriptionRequestModalOpen(false)}\n                        accept={(request: ISubscriptionRequest) => acceptSubscriptionRequest(\n                            request,\n                            getSubscriptionRequestDecisionCallback(request.id),\n                        )}\n                        reject={(request: ISubscriptionRequest) => rejectSubscriptionRequest(\n                            request,\n                            getSubscriptionRequestDecisionCallback(request.id),\n                        )}\n                        requests={subscriptionRequests}\n                    />\n                ) : null\n            }\n            <Container>\n                <TitleAndBackContainer>\n                    <StyledNotificationAndLogoutContainer>\n                        <Logout />\n                        <Notification\n                            active={!!subscriptionRequests.length}\n                            onClick={!!subscriptionRequests.length\n                                ? () => setSubscriptionRequestModalOpen(true)\n                                : () => undefined\n                            }\n                        />\n                    </StyledNotificationAndLogoutContainer>\n                    <Title>@{user.name}</Title>\n                </TitleAndBackContainer>\n                <AddTile message=\"Create new habitat\" onClick={() => setAddHabitatOpen(true)}/>\n                <AddTile message=\"Subscribe to habitat\" onClick={() => setSubscribeToNewHabitatOpen(true)}/>\n                <TileContainer tiles={habitats.map(getHabitatTileData)} />\n            </Container>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    user: userSelectors.getUser(state),\n    habitats: habitatSelectors.habitats(state),\n    subscriptionRequests: userSelectors.getSubscriptionRequests(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchUserSubscribedHabitats: (userId, callback) =>\n       dispatch(habitatActions.fetchUserSubscribedHabitats(userId, callback)),\n    fetchUser: userId => dispatch(userActions.fetchUserById(userId)),\n    fetchSubscriptionRequests: (callback?: any) => dispatch(userActions.fetchSubscriptionRequests(callback)),\n    acceptSubscriptionRequest: (request: ISubscriptionRequest, callback?) =>\n        dispatch(userActions.acceptSubscriptionRequest(request, callback)),\n    rejectSubscriptionRequest: (request: ISubscriptionRequest, callback?) =>\n        dispatch(userActions.rejectSubscriptionRequest(request, callback)),\n    setSubscriptionRequests: requests => dispatch(userActions.setSubscriptionRequests(requests)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserHabitatsComponent);","import React from 'react';\nimport {COLORS} from \"../style-config\";\n\nconst Active = ({ onClick }) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"32\"\n            height=\"32\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            style={{ cursor: 'pointer' }}\n            onClick={onClick}\n        >\n            <g id=\"notifications_24px\">\n                <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M18 15.75V10.75C18 7.68 16.37 5.11 13.5 4.43V3.75C13.5 2.92 12.83 2.25 12 2.25C11.17 2.25 10.5 2.92 10.5 3.75V4.43C7.64003 5.11 6.00003 7.67 6.00003 10.75V15.75L4.00003 17.75V18.75H20V17.75L18 15.75ZM12 21.75C13.1 21.75 14 20.85 14 19.75H10C10 20.85 10.9 21.75 12 21.75ZM8.00003 16.75H16V10.75C16 8.27 14.49 6.25 12 6.25C9.51003 6.25 8.00003 8.27 8.00003 10.75V16.75ZM7.58003 3.83L6.15003 2.4C3.75003 4.23 2.17003 7.05 2.03003 10.25H4.03003C4.18003 7.6 5.54003 5.28 7.58003 3.83ZM21.97 10.25H19.97C19.82 7.6 18.45 5.28 16.43 3.83L17.85 2.4C20.24 4.23 21.82 7.05 21.97 10.25Z\"\n                    fill={COLORS.notification}\n                    fillOpacity=\"0.8\"\n                />\n            </g>\n        </svg>\n    );\n};\n\nconst Inactive = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"32\"\n            height=\"32\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n        >\n            <g id=\"notifications_24px\">\n                <path\n                    id=\"icon/social/notifications_24px\"\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M18 15.75V10.75C18 7.68 16.37 5.11 13.5 4.43V3.75C13.5 2.92 12.83 2.25 12 2.25C11.17 2.25 10.5 2.92 10.5 3.75V4.43C7.64 5.11 6 7.67 6 10.75V15.75L4 17.75V18.75H20V17.75L18 15.75ZM12 21.75C13.1 21.75 14 20.85 14 19.75H10C10 20.85 10.9 21.75 12 21.75ZM8 16.75H16V10.75C16 8.27 14.49 6.25 12 6.25C9.51 6.25 8 8.27 8 10.75V16.75Z\"\n                    fill={COLORS.darkGray}\n                    fillOpacity=\"1\"\n                />\n            </g>\n        </svg>\n    );\n};\n\ninterface IProps {\n    active: boolean;\n    onClick: () => any;\n}\n\nexport default (props: IProps) => props.active ? <Active onClick={props.onClick} /> : <Inactive />;\n\n","export const apiBaseUrl = \"http://localhost:3000\";","export type entityId = number;\n\nexport enum SUBSCRIPTION_STATUSES {\n    REJECTED = 'rejected',\n    PENDING = 'pending',\n    ACTIVE = 'active',\n    INACTIVE = 'inactive',\n}"],"sourceRoot":""}